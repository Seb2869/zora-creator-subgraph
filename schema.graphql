type TransactionInfo @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
}

type SalesConfig @entity {
  id: ID!

  publicSalePrice: BigInt!
  maxSalePurchasePerAddress: BigInt!
  publicSaleStart: BigInt!
  publicSaleEnd: BigInt!
  presaleStart: BigInt!
  presaleEnd: BigInt!
  presaleMerkleRoot: Bytes!
}

type ContractConfig @entity {
  id: ID!

  metadataRenderer: Bytes!
  editionSize: BigInt!
  royaltyBPS: BigInt!
  fundsRecipient: Bytes!
}

type NFTEdition @entity {
  id: ID!

  creator: Bytes! # address
  address: Bytes! # address
  name: String!
  symbol: String!

  contractConfig: ContractConfig!
  salesConfigId: BigInt!
  salesConfig: SalesConfig

  numberCanMint: BigInt!
  salePrice: BigInt!
  totalSupply: BigInt!

  txn: TransactionInfo!
}

type NFTEditionPurchase @entity {
  id: ID!
  price: BigInt!
  count: BigInt!
  to: Bytes!
  txn: TransactionInfo!
}

type NFTEditionTransfer @entity {
  id: ID!
  to: Bytes! # from address for transfer
  from: Bytes! # to address for transfer
  txn: TransactionInfo!
}